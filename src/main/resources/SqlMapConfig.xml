<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

    <!--
      读取db.properties文件，resource为相对路径
      在properties文件中定义属性名要有一定的特殊性，如：jdbc.username
    -->
    <properties resource="db.properties" />

    <!-- 全局配置参数 -->
    <settings>
        <!-- 延迟加载配置 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
        <!-- 开启二级缓存，默认就是开启的，可以不写这句代码 -->
        <setting name="cacheEnabled" value="true"/>
    </settings>

    <!-- 别名定义 -->
    <typeAliases>
        <!-- 批量别名定义
        指定包名，mybatis自动扫描包中的pojo类，自动定义别名，别名就是类名（首字母大写或小写都可以）
        -->
        <package name="com.pxl.demo.entity"/>
    </typeAliases>

    <!-- 和spring整合后 environments配置将废除-->
    <environments default="development">
        <environment id="development">
            <!-- 使用jdbc事务管理，事务控制由mybatis-->
            <transactionManager type="JDBC" />
            <!-- 数据库连接池，由mybatis管理-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}" />
                <property name="url" value="${jdbc.url}" />
                <property name="username" value="${jdbc.username}" />
                <property name="password" value="${jdbc.password}" />
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!-- 批量加载映射文件，建议使用
        指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载
        遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中
        上边规范的前提是：使用的是mapper代理方法
         -->
        <package name="com.pxl.demo.dao"/>
    </mappers>
</configuration>